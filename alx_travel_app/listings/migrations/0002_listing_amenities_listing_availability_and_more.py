# Generated by Django 5.2.4 on 2025-07-20 07:31

import django.core.validators
import django.db.models.deletion
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("listings", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AddField(
            model_name="listing",
            name="amenities",
            field=models.TextField(
                blank=True, help_text="Available amenities (comma-separated)"
            ),
        ),
        migrations.AddField(
            model_name="listing",
            name="availability",
            field=models.BooleanField(
                default=True, help_text="Is the listing available for booking"
            ),
        ),
        migrations.AddField(
            model_name="listing",
            name="bathrooms",
            field=models.PositiveIntegerField(
                default=1, help_text="Number of bathrooms"
            ),
        ),
        migrations.AddField(
            model_name="listing",
            name="bedrooms",
            field=models.PositiveIntegerField(
                default=1, help_text="Number of bedrooms"
            ),
        ),
        migrations.AddField(
            model_name="listing",
            name="max_guests",
            field=models.PositiveIntegerField(
                default=1, help_text="Maximum number of guests"
            ),
        ),
        migrations.AlterField(
            model_name="listing",
            name="price_per_night",
            field=models.DecimalField(
                decimal_places=2,
                help_text="Price per night",
                max_digits=10,
                validators=[django.core.validators.MinValueValidator(Decimal("0.01"))],
            ),
        ),
        migrations.CreateModel(
            name="Booking",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("check_in_date", models.DateField(help_text="Check-in date")),
                ("check_out_date", models.DateField(help_text="Check-out date")),
                (
                    "num_guests",
                    models.PositiveIntegerField(
                        default=1, help_text="Number of guests"
                    ),
                ),
                (
                    "total_price",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Total booking price",
                        max_digits=10,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0.01"))
                        ],
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("confirmed", "Confirmed"),
                            ("cancelled", "Cancelled"),
                            ("completed", "Completed"),
                        ],
                        default="pending",
                        help_text="Booking status",
                        max_length=20,
                    ),
                ),
                (
                    "special_requests",
                    models.TextField(
                        blank=True, help_text="Special requests from the guest"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "listing",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="bookings",
                        to="listings.listing",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="bookings",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Booking",
                "verbose_name_plural": "Bookings",
                "ordering": ["-created_at"],
                "unique_together": {("listing", "check_in_date", "check_out_date")},
            },
        ),
        migrations.CreateModel(
            name="Review",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "rating",
                    models.PositiveIntegerField(
                        help_text="Rating from 1 to 5 stars",
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(5),
                        ],
                    ),
                ),
                ("comment", models.TextField(help_text="Review comment")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "cleanliness_rating",
                    models.PositiveIntegerField(
                        blank=True,
                        help_text="Cleanliness rating (1-5)",
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(5),
                        ],
                    ),
                ),
                (
                    "accuracy_rating",
                    models.PositiveIntegerField(
                        blank=True,
                        help_text="Accuracy rating (1-5)",
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(5),
                        ],
                    ),
                ),
                (
                    "location_rating",
                    models.PositiveIntegerField(
                        blank=True,
                        help_text="Location rating (1-5)",
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(5),
                        ],
                    ),
                ),
                (
                    "value_rating",
                    models.PositiveIntegerField(
                        blank=True,
                        help_text="Value for money rating (1-5)",
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(5),
                        ],
                    ),
                ),
                (
                    "booking",
                    models.OneToOneField(
                        blank=True,
                        help_text="Associated booking (if any)",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="review",
                        to="listings.booking",
                    ),
                ),
                (
                    "listing",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="reviews",
                        to="listings.listing",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="reviews",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Review",
                "verbose_name_plural": "Reviews",
                "ordering": ["-created_at"],
                "unique_together": {("listing", "user")},
            },
        ),
    ]
